

mkdir -p /vb/shared/initial_install/
if ! [  -f "$HOME/.ssh/id_rsa" ]; then
  echo "making new ssh keys"
  ssh-keygen -t rsa -b 4096  -q -N "" -q -f $HOME/.ssh/id_rsa
fi

rm -f  $HOME/.ssh/known_hosts
cp ~/.ssh/id_rsa* /vb/shared/initial_install/
cp ~/.ssh/id_rsa.pub /vb/shared/initial_install/authorized_keys

export VB_USER=mark
export VB_PASS=mark
export MY_USER='mark'

mkdir -vp /cygdrive/c/vb/shared/initial_install
mkdir -vp /cygdrive/c/vb/shared/images

rm -vf /cygdrive/c/vb/shared/initial_install/first_script.sh
rm -vf /cygdrive/c/vb/shared/initial_install/first_apt_install.sh

vboxmanage showvminfo BaseImage | grep -i State: | sed -e "s/  */ /g" | cut -d ' ' -f2
rc=${PIPESTATUS[0]}
if ! [ "$rc" = "0" ]; then
   echo "BaseImage vm not found : $rc"
   exit
fi

r=`vboxmanage showvminfo BaseImage | grep -i State: | sed -e "s/  */ /g" | cut -d ' ' -f2`
echo $r
if ! [ "$r" = "running" ]; then
   r2=`vboxmanage showvminfo BaseImage | grep -i State:`
   echo "BaseImage not running: $r2, starting BaseImage, sleeping 60 seconds"
   VBoxManage startvm BaseImage
   sleep 60
   
   r=`vboxmanage showvminfo BaseImage | grep -i State: | sed -e "s/  */ /g" | cut -d ' ' -f2`
   if ! [ "$r" = "running" ]; then
     r2=`vboxmanage showvminfo BaseImage | grep -i State:`
     echo "BaseImage did not start: $r2, aborting"
     exit
   fi
fi

VBoxManage guestcontrol BaseImage run   --username root --password $VB_PASS --exe /bin/echo "test connect to BaseImage worked"
rc=$?
count=0
while ! [ "$rc" = "0" ]; do
  let count=$count+1
  if [ $count -gt 5 ]; then
    r2=`vboxmanage showvminfo BaseImage | grep -i State:`
    echo "VM not started completely after 1 minute and 30 seconds, aborting: $r2"
    echo "Run the script again after it is up."
    exit
  fi

  echo "Couldn't connect to BaseImage, sleeping 10 seconds : $rc"
  sleep 10
  VBoxManage guestcontrol BaseImage run   --username root --password $VB_PASS --exe /bin/echo "test connect to BaseImage worked"
  rc=$?
done

  # Make apt-get file
echo "
set -xe

apt-get update
apt-get -y autoremove
apt-get -y install emacs screen nmap net-tools ssh software-properties-common gnupg tmux
apt-get -y install bind9-dnsutils 
apt-get -y install btop htop nano nmap tmux nmon atop slurm dstat ranger tldr
apt-get -y install cpufetch bpytop speedtest-cli lolcat mc speedtest-cli
apt-get -y install python-setuptools python3-pip lynx plocate zip
apt-get -y autoremove
" > /cygdrive/c/vb/shared/initial_install/first_apt_install.sh

  # Make first install file
echo "
export TERM=linux
set -xe
  
   # Make default user sudo. 
sudodetect=\`grep NOPASSWD /etc/sudoers | wc -l\`
if [ \"\$sudodetect\" = '0' ]; then
  echo 'Making $VB_USER sudo'
  echo '$MY_USER ALL=(ALL) NOPASSWD: ALL' | tee -a /etc/sudoers
fi

echo 'installing ssh keys for root and $VB_USER'
mkdir -vp /root/.ssh
mkdir -vp /home/$VB_USER/.ssh

cp -vf /vb/shared/initial_install/id_rsa.pub /root/.ssh/authorized_keys
cp -vf /vb/shared/initial_install/id_rsa.pub /home/$VB_USER/.ssh/authorized_keys
  ## TODO : remove this and copy rsa key to admin server
  ## after it is created.
  ## This a security big hole. Every host will connect to every host otherwise.
cp -vf /vb/shared/initial_install/id_rsa /home/$VB_USER/.ssh/
cp -vf /vb/shared/initial_install/id_rsa /root/.ssh/

echo \"
Host *
  StrictHostKeyChecking accept-new
\" > /root/.ssh/config

echo \"
Host *
  StrictHostKeyChecking accept-new
\" > /home/$VB_USER/.ssh//config


chmod -vR 744  /root/.ssh /home/$VB_USER/.ssh
  ## TODO : remove this and copy rsa key to admin server
  ## after it is created.
  ## This a security big hole. Every host will connect to every host otherwise.  
chmod -v 600 /root/.ssh/id_rsa /home/$VB_USER/.ssh/id_rsa

chown -vR root /root/.ssh/authorized_keys
chown -vR $VB_USER /home/$VB_USER/.ssh/authorized_keys

echo 'configuring autologin'
autologin=\`grep -i automaticlogin /etc/gdm3/custom.conf | grep -v '#'  | wc -l\`

if [ \"\$autologin\" =  '0' ]; then
   echo 'making it auto login'
   echo '
[daemon]
AutomaticLoginEnable=true
AutomaticLogin=$VB_USER
' > autologin.txt

  sed -i 's/\\[daemon\\]//g' /etc/gdm3/custom.conf
  cat autologin.txt >> /etc/gdm3/custom.conf
fi

echo 'turning off screensaver for $VB_USER'
echo '
gsettings set org.gnome.desktop.session idle-delay 0
gsettings set org.gnome.desktop.screensaver lock-enabled false
' > /home/$VB_USER/.xsession
chown $VB_USER /home/$VB_USER/.xsession

" >  /cygdrive/c/vb/shared/initial_install/first_script.sh

execute_command ()
  {
  echo ""
  count=0
  echo "EXECUTING: $@"
  "$@"
  rc=$?
  while [ $rc != '0' ]; do
    echo "Error executing, aborting script: $rc"
    echo "trying again upto 10 times."
    echo "count: $count"
    echo "EXECUTING: $@"
    "$@"
    rc=$?
  done
}

  ## /vb/shared/initial_install/first_script.sh is relative to "c:\"
c="VBoxManage guestcontrol BaseImage copyto   --username root --password $VB_PASS  --target-directory /root/first_script.sh /vb/shared/initial_install/first_script.sh"
execute_command $c

sleep 1
   ## change the first to be executable
c="VBoxManage guestcontrol BaseImage run   --username root --password $VB_PASS --exe /bin/chmod  -- 755 /root/first_script.sh"
execute_command $c

sleep 1
  ## Now execute script
c="VBoxManage guestcontrol BaseImage run   --username root --password $VB_PASS     --exe /bin/bash -- /root/first_script.sh "
execute_command $c

  ## /vb/shared/initial_install/first_apt_install.sh is relative to "c:\"
c="VBoxManage guestcontrol BaseImage copyto   --username root --password $VB_PASS --target-directory /root/first_apt_install.sh /vb/shared/initial_install/first_apt_install.sh "
execute_command $c

sleep 1
   ## change the first to be executable
c="VBoxManage guestcontrol BaseImage run   --username root --password $VB_PASS  --exe /bin/chmod  -- 755 /root/first_apt_install.sh "
execute_command $c


  ## Now execute script
c="VBoxManage guestcontrol BaseImage run   --username root --password $VB_PASS --exe /bin/bash -- /root/first_apt_install.sh "
execute_command $c

c="VBoxManage controlvm "BaseImage" poweroff"
execute_command $c

r=`vboxmanage showvminfo BaseImage | grep -i State: | sed -e "s/  */ /g" | cut -d ' ' -f2,3`
count=0
while ! [ "$r" = 'powered off' ]; do
  let count=$count+1
  if [ $count -gt 5 ]; then
    echo "BaseImage still not in 'powered off' state, aborting"
    exit
  fi
  
  r2=`vboxmanage showvminfo BaseImage | grep -i State: `
  echo "BaseImage not powered off, sleeping 5 seconds: $r2"
  echo "Current time:" `date`
  sleep 5
  r=`vboxmanage showvminfo BaseImage | grep -i State: | sed -e "s/  */ /g" | cut -d ' ' -f2,3`
done
sleep 5

echo "Exporting image of BaseImage"
rm -f /cygdrive/c/vb/shared/images/BaseImage.ova
   ## Need to use a path windows recognizes. Path get converted to "c:\"
c="vboxmanage export "BaseImage" -o /vb/shared/images/BaseImage.ova"
execute_command $c
